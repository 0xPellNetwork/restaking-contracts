{
  "address": "0x45e9199A8B62a761A0a1f5FC2B8aB5d184e7289B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPellUSD",
          "name": "_pusd",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_assets",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "AssetAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "AssetRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimAmount",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldCooldown",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCooldown",
          "type": "uint256"
        }
      ],
      "name": "CooldownSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "redeemAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "redeemAssetAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pusdAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldFeeRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFeeRate",
          "type": "uint256"
        }
      ],
      "name": "UpdateFeeRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMaxRedeem",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxRedeem",
          "type": "uint256"
        }
      ],
      "name": "UpdateMaxPerRedeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldVault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newVault",
          "type": "address"
        }
      ],
      "name": "UpdatedVault",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PUSD",
      "outputs": [
        {
          "internalType": "contract IPellUSD",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "addSupportedAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetToken",
          "type": "address"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cooldownDuration",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "isSupportedAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "listSupportedAssets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPerRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pusdAmount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pusdAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_permitV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_permitR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_permitS",
          "type": "bytes32"
        }
      ],
      "name": "redeemWithPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "redemptionHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "redemptions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cooldownEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "underlingAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pusdAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "removeSupportedAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "rescueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "_cooldownDuration",
          "type": "uint24"
        }
      ],
      "name": "setCooldownDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feeRate",
          "type": "uint256"
        }
      ],
      "name": "updateFeeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxRedeem",
          "type": "uint256"
        }
      ],
      "name": "updateMaxPerRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "updateVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x9d5e32ad068b518a4cec277c7ab1fab1a8e5d087f4bdfab746dcb194eba37559",
  "receipt": {
    "to": null,
    "from": "0x1Ee532cf775be02E0B306571e3555321FC75988d",
    "contractAddress": "0x45e9199A8B62a761A0a1f5FC2B8aB5d184e7289B",
    "transactionIndex": 25,
    "gasUsed": "1984611",
    "logsBloom": "0x
    "blockHash": "0xb7c65e3766d05f0c849b758a5bcab0ec2d0fd63a4dc95a553225d99c43ba1d5e",
    "transactionHash": "0x9d5e32ad068b518a4cec277c7ab1fab1a8e5d087f4bdfab746dcb194eba37559",
    "logs": [
      {
        "transactionIndex": 25,
        "blockNumber": 5714981,
        "transactionHash": "0x9d5e32ad068b518a4cec277c7ab1fab1a8e5d087f4bdfab746dcb194eba37559",
        "address": "0x45e9199A8B62a761A0a1f5FC2B8aB5d184e7289B",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001ee532cf775be02e0b306571e3555321fc75988d"
        ],
        "data": "0x",
        "logIndex": 42,
        "blockHash": "0xb7c65e3766d05f0c849b758a5bcab0ec2d0fd63a4dc95a553225d99c43ba1d5e"
      },
      {
        "transactionIndex": 25,
        "blockNumber": 5714981,
        "transactionHash": "0x9d5e32ad068b518a4cec277c7ab1fab1a8e5d087f4bdfab746dcb194eba37559",
        "address": "0x45e9199A8B62a761A0a1f5FC2B8aB5d184e7289B",
        "topics": [
          "0x0e3c58ebfb2e7465fbb1c32e6b4f40c3c4f5ca77e8218a386aff8617831260d7",
          "0x0000000000000000000000007c346c27ef3a48b1ae0454d994a49005c720d6fa"
        ],
        "data": "0x",
        "logIndex": 43,
        "blockHash": "0xb7c65e3766d05f0c849b758a5bcab0ec2d0fd63a4dc95a553225d99c43ba1d5e"
      },
      {
        "transactionIndex": 25,
        "blockNumber": 5714981,
        "transactionHash": "0x9d5e32ad068b518a4cec277c7ab1fab1a8e5d087f4bdfab746dcb194eba37559",
        "address": "0x45e9199A8B62a761A0a1f5FC2B8aB5d184e7289B",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000001ee532cf775be02e0b306571e3555321fc75988d",
          "0x0000000000000000000000001ee532cf775be02e0b306571e3555321fc75988d"
        ],
        "data": "0x",
        "logIndex": 44,
        "blockHash": "0xb7c65e3766d05f0c849b758a5bcab0ec2d0fd63a4dc95a553225d99c43ba1d5e"
      }
    ],
    "blockNumber": 5714981,
    "cumulativeGasUsed": "4960331",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1F90b9f56d6C53f937B7B4f579b3f413A20A1b44",
    "0x0000000000000000000000000000000000000000",
    [
      "0x7C346C27Ef3A48B1AE0454D994A49005C720D6FA"
    ],
    "0x1Ee532cf775be02E0B306571e3555321FC75988d"
  ],
  "numDeployments": 1,
  "solcInputHash": "4809229aca3c5ef4a04863cf8e3c93da",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPellUSD\",\"name\":\"_pusd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"AssetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"AssetRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldCooldown\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCooldown\",\"type\":\"uint256\"}],\"name\":\"CooldownSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemAssetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pusdAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFeeRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFeeRate\",\"type\":\"uint256\"}],\"name\":\"UpdateFeeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMaxRedeem\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxRedeem\",\"type\":\"uint256\"}],\"name\":\"UpdateMaxPerRedeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"UpdatedVault\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PUSD\",\"outputs\":[{\"internalType\":\"contract IPellUSD\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"addSupportedAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetToken\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldownDuration\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"isSupportedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listSupportedAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPerRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pusdAmount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pusdAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_permitS\",\"type\":\"bytes32\"}],\"name\":\"redeemWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"redemptionHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redemptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cooldownEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pusdAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"removeSupportedAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_cooldownDuration\",\"type\":\"uint24\"}],\"name\":\"setCooldownDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeRate\",\"type\":\"uint256\"}],\"name\":\"updateFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxRedeem\",\"type\":\"uint256\"}],\"name\":\"updateMaxPerRedeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"updateVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"addSupportedAsset(address)\":{\"params\":{\"asset\":\"Support asset\"}},\"claim(address)\":{\"params\":{\"_assetToken\":\"Claimable token address\"}},\"isSupportedAsset(address)\":{\"params\":{\"asset\":\"Support asset\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pauses contract functionality.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"redeem(address,uint256)\":{\"params\":{\"_assetToken\":\"Redeem asset address\",\"_pusdAmount\":\"PUSD amount\"}},\"redeemWithPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"_assetToken\":\"Redeem asset address\",\"_deadline\":\"Deadline\",\"_permitR\":\"R\",\"_permitS\":\"S\",\"_permitV\":\"V\",\"_pusdAmount\":\"PUSD amount\"}},\"removeSupportedAsset(address)\":{\"params\":{\"asset\":\"Support asset\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setCooldownDuration(uint24)\":{\"params\":{\"duration\":\"Duration of the cooldown\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpauses contract functionality.\"},\"updateFeeRate(uint256)\":{\"details\":\"Update the redeem fee rate.Only callable by addresses with the owner.\",\"params\":{\"_rate\":\"The new redeem fee rate.\"}},\"updateMaxPerRedeem(uint256)\":{\"details\":\"Update the max redeem limit.Only callable by addresses with the owner.\",\"params\":{\"_maxRedeem\":\"The new max redeem limit.\"}},\"updateVault(address)\":{\"details\":\"Update the vault address.Only callable by addresses with the owner.\",\"params\":{\"_vault\":\"The new vault address.\"}}},\"title\":\"PUSD Redeem\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"PUSD()\":{\"notice\":\"PUSD stablecoin\"},\"addSupportedAsset(address)\":{\"notice\":\"Adds an asset to the supported assets list.\"},\"claim(address)\":{\"notice\":\"Cliam token\"},\"cooldownDuration()\":{\"notice\":\"T+2\"},\"isSupportedAsset(address)\":{\"notice\":\"Checks if an asset is supported.\"},\"pause()\":{\"notice\":\"Only callable by addresses with the owner.\"},\"redeem(address,uint256)\":{\"notice\":\"Redeem supported token\"},\"redeemWithPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Redeem supported token\"},\"redemptionHistory(address,uint256)\":{\"notice\":\"assetToken => timestamp(days) => totalRedeem\"},\"redemptions(address,address)\":{\"notice\":\"assetToken => account => Redemption\"},\"removeSupportedAsset(address)\":{\"notice\":\"Removes an asset from the supported assets list\"},\"setCooldownDuration(uint24)\":{\"notice\":\"Set cooldown duration.\"},\"unpause()\":{\"notice\":\"Only callable by addresses with the owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/PUSDRedeem.sol\":\"PUSDRedeem\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Ownable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2Step is Ownable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() public virtual {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n}\\n\",\"keccak256\":\"0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\"},\"contracts/helpers/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity 0.8.20;\\n\\n/**\\n * @title Errors library\\n * @notice Defines the error messages emitted by the different contracts of the  protocol\\n */\\nlibrary Errors {\\n  string public constant ZERO_ADDRESS_NOT_VALID = '1'; // 'Zero address not valid'\\n  string public constant CANT_RENOUNCE_OWNERSHIP = '2'; // 'Can't renounce ownership'\\n  string public constant CONFIG_SUPPORT_ASEETS = '3'; // 'Config sales contract support assets'\\n  string public constant INVALID_CUSTODIAN_ADDRESS = '4'; // 'Invalid custodian address'\\n  string public constant INVALID_ASSET_ADDRESS = '5'; // 'Invalid asset address'\\n  string public constant INVALID_FEE_RATE = '6'; // 'Fee rate must be greater than 0 and less than 1e5'\\n  string public constant ZERO_AMOUNT_NOT_VALID = '7'; // 'Zero amount not valid'\\n  string public constant INVALID_ROUTE = '8'; // 'Invalid route'\\n  string public constant INVALID_TOKEN = '9'; // 'Invalid token'\\n  string public constant INVALID_COOLDOWN = '10'; // 'Invalid cooldown'\\n  string public constant EXCESSIVE_REDEEM_AMOUNT = '11'; // 'Excessive redeem amount'\\n  string public constant INVALID_AMOUNT = '12'; // 'Invalid amount'\\n  string public constant COOLDOWN_NOT_OVER = '13'; // 'Cooldown not over'\\n  string public constant MIN_REDEEM_VIOLATION = '14'; // 'Min redeem violation'\\n}\\n\",\"keccak256\":\"0x45ace13ae8b93a13b8ba3ead1e81710b765f7f110011d217a24af285a1877b53\",\"license\":\"LGPL-3.0\"},\"contracts/interfaces/IPUSDRedeem.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity 0.8.20;\\n\\ninterface IPUSDRedeem {\\n  event AssetAdded(address indexed asset);\\n  event AssetRemoved(address indexed asset);\\n  event Redeem(address indexed account, address indexed redeemAsset, uint256 redeemAssetAmount, uint256 pusdAmount, uint256 fee);\\n  event Claim(address indexed account, address indexed claimAsset, uint256 claimAmount);\\n  event CooldownSet(uint256 oldCooldown, uint256 newCooldown);\\n  event UpdateFeeRate(uint256 oldFeeRate, uint256 newFeeRate);\\n  event UpdateMaxPerRedeem(uint256 oldMaxRedeem, uint256 newMaxRedeem);\\n  event UpdatedVault(address oldVault, address newVault);\\n\\n  struct Redemption {\\n    uint256 cooldownEnd;\\n    uint256 underlingAmount;\\n    uint256 pusdAmount;\\n  }\\n\\n  /**\\n   * @notice Redeem supported token\\n   * @param _assetToken Redeem asset address\\n   * @param _pusdAmount PUSD amount\\n   */\\n  function redeem(address _assetToken, uint256 _pusdAmount) external;\\n\\n  /**\\n   * @notice Redeem supported token\\n   * @param _assetToken Redeem asset address\\n   * @param _pusdAmount PUSD amount\\n   * @param _deadline Deadline\\n   * @param _permitV V\\n   * @param _permitR R\\n   * @param _permitS S\\n   */\\n  function redeemWithPermit(\\n    address _assetToken,\\n    uint256 _pusdAmount,\\n    uint256 _deadline,\\n    uint8 _permitV,\\n    bytes32 _permitR,\\n    bytes32 _permitS\\n  ) external;\\n\\n  /**\\n   * @notice Cliam token\\n   * @param _assetToken Claimable token address\\n   */\\n  function claim(address _assetToken) external;\\n\\n  /**\\n   * @notice Adds an asset to the supported assets list.\\n   * @param asset Support asset\\n   */\\n  function addSupportedAsset(address asset) external;\\n\\n  /**\\n   * @notice Removes an asset from the supported assets list\\n   * @param asset Support asset\\n   */\\n  function removeSupportedAsset(address asset) external;\\n\\n  /**\\n   * @notice Checks if an asset is supported.\\n   * @param asset Support asset\\n   */\\n  function isSupportedAsset(address asset) external view returns (bool);\\n\\n  /**\\n   * @notice Set cooldown duration.\\n   * @param duration Duration of the cooldown\\n   */\\n  function setCooldownDuration(uint24 duration) external;\\n\\n  /**\\n   * @dev Update the redeem fee rate.\\n   * @dev Only callable by addresses with the owner.\\n   * @param _rate The new redeem fee rate.\\n   */\\n  function updateFeeRate(uint256 _rate) external;\\n\\n  /**\\n   * @dev Update the max redeem limit.\\n   * @dev Only callable by addresses with the owner.\\n   * @param _maxRedeem The new max redeem limit.\\n   */\\n  function updateMaxPerRedeem(uint256 _maxRedeem) external;\\n\\n  /**\\n   * @dev Update the vault address.\\n   * @dev Only callable by addresses with the owner.\\n   * @param _vault The new vault address.\\n   */\\n  function updateVault(address _vault) external;\\n\\n  /**\\n   * @dev Pauses contract functionality.\\n   * @notice Only callable by addresses with the owner.\\n   */\\n  function pause() external;\\n\\n  /**\\n   * @dev Unpauses contract functionality.\\n   * @notice Only callable by addresses with the owner.\\n   */\\n  function unpause() external;\\n}\\n\",\"keccak256\":\"0xdfb0bc9f066dff256a8708e661aea931701af09adc4548caee97cac3e138dfe9\",\"license\":\"LGPL-3.0\"},\"contracts/interfaces/IPellUSD.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity 0.8.20;\\n\\ninterface IPellUSD {\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function mint(address _to, uint256 _amount) external;\\n\\n  function burn(uint256 _amount) external;\\n\\n  function burnFrom(address account, uint256 amount) external;\\n\\n  function setMinter(address newMinter) external;\\n}\\n\",\"keccak256\":\"0x43d4b5bb9c4fe97688eb1a75bf3b9a13dc4b3354a599b94aa2d6a10a5b116636\",\"license\":\"LGPL-3.0\"},\"contracts/tokens/PUSDRedeem.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity 0.8.20;\\n\\nimport {ReentrancyGuard} from '@openzeppelin/contracts/security/ReentrancyGuard.sol';\\nimport {SafeERC20, IERC20, IERC20Permit} from '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\\nimport {IERC20Metadata} from '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\nimport {EnumerableSet} from '@openzeppelin/contracts/utils/structs/EnumerableSet.sol';\\nimport {Ownable2Step} from '@openzeppelin/contracts/access/Ownable2Step.sol';\\nimport {Pausable} from '@openzeppelin/contracts/security/Pausable.sol';\\nimport {Errors} from '../helpers/Errors.sol';\\nimport {IPellUSD} from '../interfaces/IPellUSD.sol';\\nimport {IPUSDRedeem} from '../interfaces/IPUSDRedeem.sol';\\n\\n/**\\n * @title PUSD Redeem\\n */\\ncontract PUSDRedeem is Ownable2Step, Pausable, ReentrancyGuard, IPUSDRedeem {\\n  uint256 private constant FEE_RATE_FACTOR = 1e6;\\n  uint256 private constant MIN_REDEEM = 1e18;\\n\\n  /// @notice PUSD stablecoin\\n  IPellUSD public immutable PUSD;\\n\\n  /// @notice Supported assets\\n  EnumerableSet.AddressSet private _supportedAssets;\\n\\n  address public vault;\\n  /// T+2\\n  uint24 public cooldownDuration;\\n  uint256 public feeRate;\\n  uint256 public maxPerRedeem;\\n\\n  using SafeERC20 for IERC20;\\n  using SafeERC20 for IERC20Permit;\\n  using EnumerableSet for EnumerableSet.AddressSet;\\n\\n  /// assetToken => account => Redemption\\n  mapping(address => mapping(address => Redemption)) public redemptions;\\n  /// assetToken => timestamp(days) => totalRedeem\\n  mapping(address => mapping(uint256 => uint256)) public redemptionHistory;\\n\\n  constructor(IPellUSD _pusd, address _vault, address[] memory _assets, address _initialOwner) {\\n    require(address(_pusd) != address(0), Errors.ZERO_ADDRESS_NOT_VALID);\\n    require(_assets.length != 0, Errors.CONFIG_SUPPORT_ASEETS);\\n    require(_initialOwner != address(0), Errors.ZERO_ADDRESS_NOT_VALID);\\n\\n    PUSD = _pusd;\\n    vault = _vault != address(0) ? _vault : address(this);\\n    cooldownDuration = 2 days;\\n\\n    for (uint256 i = 0; i < _assets.length; i++) {\\n      addSupportedAsset(_assets[i]);\\n    }\\n\\n    _transferOwnership(_initialOwner);\\n  }\\n\\n  /// @inheritdoc IPUSDRedeem\\n  function redeem(address _assetToken, uint256 _pusdAmount) external override nonReentrant whenNotPaused {\\n    require(_supportedAssets.contains(_assetToken), Errors.CONFIG_SUPPORT_ASEETS);\\n    require(_pusdAmount >= MIN_REDEEM, Errors.MIN_REDEEM_VIOLATION);\\n    require(_pusdAmount <= maxPerRedeem, Errors.EXCESSIVE_REDEEM_AMOUNT);\\n\\n    _redeem(_assetToken, _pusdAmount);\\n  }\\n\\n  /// @inheritdoc IPUSDRedeem\\n  function redeemWithPermit(\\n    address _assetToken,\\n    uint256 _pusdAmount,\\n    uint256 _deadline,\\n    uint8 _permitV,\\n    bytes32 _permitR,\\n    bytes32 _permitS\\n  ) external override nonReentrant whenNotPaused {\\n    require(_supportedAssets.contains(_assetToken), Errors.CONFIG_SUPPORT_ASEETS);\\n    require(_pusdAmount >= MIN_REDEEM, Errors.MIN_REDEEM_VIOLATION);\\n    require(_pusdAmount <= maxPerRedeem, Errors.EXCESSIVE_REDEEM_AMOUNT);\\n\\n    IERC20Permit(address(PUSD)).safePermit(_msgSender(), address(this), _pusdAmount, _deadline, _permitV, _permitR, _permitS);\\n    _redeem(_assetToken, _pusdAmount);\\n  }\\n\\n  /// @inheritdoc IPUSDRedeem\\n  function claim(address _assetToken) external override nonReentrant whenNotPaused {\\n    require(_supportedAssets.contains(_assetToken), Errors.INVALID_ASSET_ADDRESS);\\n    Redemption storage _redemption = redemptions[_assetToken][_msgSender()];\\n    uint256 _pusdAmount = _redemption.pusdAmount;\\n    uint256 _claimAmount = _redemption.underlingAmount;\\n    require(_pusdAmount > 0 && _claimAmount > 0, Errors.INVALID_AMOUNT);\\n    require(block.timestamp >= _redemption.cooldownEnd, Errors.COOLDOWN_NOT_OVER);\\n\\n    PUSD.burn(_pusdAmount);\\n    _redemption.cooldownEnd = 0;\\n    _redemption.underlingAmount = 0;\\n    _redemption.pusdAmount = 0;\\n\\n    _payOrTransfer(_assetToken, vault, _msgSender(), _claimAmount);\\n\\n    emit Claim(_msgSender(), _assetToken, _claimAmount);\\n  }\\n\\n  /// @inheritdoc IPUSDRedeem\\n  function setCooldownDuration(uint24 _cooldownDuration) external override onlyOwner {\\n    require(_cooldownDuration >= 1 days, Errors.INVALID_COOLDOWN);\\n    emit CooldownSet(cooldownDuration, _cooldownDuration);\\n    cooldownDuration = _cooldownDuration;\\n  }\\n\\n  /// @inheritdoc IPUSDRedeem\\n  function updateFeeRate(uint256 _feeRate) external override onlyOwner {\\n    require(_feeRate >= 0 && _feeRate < 1e5, Errors.INVALID_FEE_RATE);\\n    emit UpdateFeeRate(feeRate, _feeRate);\\n    feeRate = _feeRate;\\n  }\\n\\n  /// @inheritdoc IPUSDRedeem\\n  function updateMaxPerRedeem(uint256 _maxRedeem) external override onlyOwner {\\n    require(_maxRedeem > 0, Errors.INVALID_AMOUNT);\\n    emit UpdateMaxPerRedeem(maxPerRedeem, _maxRedeem);\\n    maxPerRedeem = _maxRedeem;\\n  }\\n\\n  /// @inheritdoc IPUSDRedeem\\n  function updateVault(address _vault) external override onlyOwner {\\n    require(_vault != address(0), Errors.ZERO_ADDRESS_NOT_VALID);\\n    emit UpdatedVault(vault, _vault);\\n    vault = _vault;\\n  }\\n\\n  /// @inheritdoc IPUSDRedeem\\n  function pause() external override onlyOwner {\\n    _pause();\\n  }\\n\\n  /// @inheritdoc IPUSDRedeem\\n  function unpause() external override onlyOwner {\\n    _unpause();\\n  }\\n\\n  /// @inheritdoc IPUSDRedeem\\n  function addSupportedAsset(address _asset) public override onlyOwner {\\n    require(_asset != address(0) && _supportedAssets.add(_asset), Errors.INVALID_ASSET_ADDRESS);\\n    emit AssetAdded(_asset);\\n  }\\n\\n  /// @inheritdoc IPUSDRedeem\\n  function removeSupportedAsset(address _asset) external override onlyOwner {\\n    require(_supportedAssets.remove(_asset), Errors.INVALID_ASSET_ADDRESS);\\n    emit AssetRemoved(_asset);\\n  }\\n\\n  /// @inheritdoc IPUSDRedeem\\n  function isSupportedAsset(address _asset) external view override returns (bool) {\\n    return _supportedAssets.contains(_asset);\\n  }\\n\\n  function listSupportedAssets() public view returns (address[] memory) {\\n    return _supportedAssets.values();\\n  }\\n\\n  function rescueTokens(address _token, address _to, uint256 _amount) external onlyOwner {\\n    require(address(_token) != address(PUSD), Errors.INVALID_TOKEN);\\n    require(_to != address(0), Errors.ZERO_ADDRESS_NOT_VALID);\\n    require(_amount > 0, Errors.ZERO_AMOUNT_NOT_VALID);\\n    IERC20(_token).safeTransfer(_to, _amount);\\n  }\\n\\n  function _redeem(address _assetToken, uint256 _pusdAmount) internal {\\n    uint256 _assetAmount = _pusdAmount / (1e18 / 10 ** IERC20Metadata(_assetToken).decimals());\\n    uint256 fee;\\n    if (feeRate > 0) {\\n      fee = (_assetAmount * feeRate) / FEE_RATE_FACTOR;\\n    }\\n    _assetAmount -= fee;\\n\\n    Redemption storage _redemption = redemptions[_assetToken][_msgSender()];\\n    _redemption.pusdAmount += _pusdAmount;\\n    _redemption.underlingAmount += _assetAmount;\\n    _redemption.cooldownEnd = block.timestamp + cooldownDuration;\\n\\n    redemptionHistory[_assetToken][(block.timestamp / 1 days) * 1 days] += _assetAmount;\\n\\n    IERC20(address(PUSD)).safeTransferFrom(_msgSender(), address(this), _pusdAmount);\\n\\n    emit Redeem(_msgSender(), _assetToken, _assetAmount, _pusdAmount, fee);\\n  }\\n\\n  function _payOrTransfer(address _token, address _payer, address _recipient, uint256 _amount) internal {\\n    if (_payer == address(this)) IERC20(_token).safeTransfer(_recipient, _amount);\\n    else IERC20(_token).safeTransferFrom(_payer, _recipient, _amount);\\n  }\\n}\\n\",\"keccak256\":\"0xbd690edaeccfcd48f1f93318dc5fd416fdd734692a2633ca419f8363c0fb102f\",\"license\":\"LGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620025c6380380620025c68339810160408190526200003491620003e1565b6200003f33620001c7565b6001805460ff60a01b19168155600281905560408051808201909152908152603160f81b60208201526001600160a01b0385166200009b5760405162461bcd60e51b8152600401620000929190620004f4565b60405180910390fd5b5081516040805180820190915260018152603360f81b602082015290620000d75760405162461bcd60e51b8152600401620000929190620004f4565b506040805180820190915260018152603160f81b60208201526001600160a01b0382166200011a5760405162461bcd60e51b8152600401620000929190620004f4565b506001600160a01b03808516608052831662000137573062000139565b825b600580546001600160a01b03929092166001600160b81b0319909216919091176102a360a81b17905560005b8251811015620001b1576200019c83828151811062000188576200018862000544565b6020026020010151620001e560201b60201c565b80620001a8816200055a565b91505062000165565b50620001bd81620001c7565b5050505062000582565b600180546001600160a01b0319169055620001e28162000283565b50565b620001ef620002d3565b6001600160a01b038116158015906200021057506200021060038262000331565b604051806040016040528060018152602001603560f81b815250906200024b5760405162461bcd60e51b8152600401620000929190620004f4565b506040516001600160a01b038216907f0e3c58ebfb2e7465fbb1c32e6b4f40c3c4f5ca77e8218a386aff8617831260d790600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146200032f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000092565b565b600062000348836001600160a01b03841662000351565b90505b92915050565b60008181526001830160205260408120546200039a575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200034b565b5060006200034b565b6001600160a01b0381168114620001e257600080fd5b8051620003c681620003a3565b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215620003f857600080fd5b84516200040581620003a3565b809450506020808601516200041a81620003a3565b60408701519094506001600160401b03808211156200043857600080fd5b818801915088601f8301126200044d57600080fd5b815181811115620004625762000462620003cb565b8060051b604051601f19603f830116810181811085821117156200048a576200048a620003cb565b60405291825284820192508381018501918b831115620004a957600080fd5b938501935b82851015620004d257620004c285620003b9565b84529385019392850192620004ae565b809750505050505050620004e960608601620003b9565b905092959194509250565b600060208083528351808285015260005b81811015620005235785810183015185820160400152820162000505565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200057b57634e487b7160e01b600052601160045260246000fd5b5060010190565b60805161200c620005ba600039600081816103910152818161061301528181610aae01528181610c080152611231015261200c6000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80638da5cb5b116100f9578063ce23eb3c11610097578063e7563f3f11610071578063e7563f3f146103ea578063f2fde38b146103fd578063fac09e8714610410578063fbfa77cf1461042357600080fd5b8063ce23eb3c146103b3578063cea9d26f146103c6578063e30c3978146103d957600080fd5b80639be918e6116100d35780639be918e6146102f9578063ad5c40f01461030c578063b714073314610361578063b9a57d021461038c57600080fd5b80638da5cb5b146102b857806393e00c86146102dd578063978bbdb9146102f057600080fd5b80634ba5c66311610166578063715018a611610140578063715018a61461028d57806379ba5097146102955780637b84fda51461029d5780638456cb59146102b057600080fd5b80634ba5c663146102475780635436ae9a1461025a5780635c975abb1461026f57600080fd5b8063352693151161019757806335269315146101f95780633f4ba83a146102285780634682f7131461023057600080fd5b80631c46bc6f146101be5780631e83409a146101d35780631e9a6950146101e6575b600080fd5b6101d16101cc366004611bcf565b610436565b005b6101d16101e1366004611bcf565b6104c2565b6101d16101f4366004611bea565b6106f1565b60055461020f90600160a01b900462ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b6101d16107e0565b61023960075481565b60405190815260200161021f565b6101d1610255366004611c14565b6107f2565b610262610873565b60405161021f9190611c2d565b600154600160a01b900460ff165b604051901515815260200161021f565b6101d1610884565b6101d1610896565b6101d16102ab366004611c14565b610921565b6101d16109c2565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161021f565b6101d16102eb366004611c89565b6109d2565b61023960065481565b61027d610307366004611bcf565b610afe565b61034661031a366004611ce3565b600860209081526000928352604080842090915290825290208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161021f565b61023961036f366004611bea565b600960209081526000928352604080842090915290825290205481565b6102c57f000000000000000000000000000000000000000000000000000000000000000081565b6101d16103c1366004611d16565b610b11565b6101d16103d4366004611d3b565b610bfe565b6001546001600160a01b03166102c5565b6101d16103f8366004611bcf565b610d3d565b6101d161040b366004611bcf565b610dfb565b6101d161041e366004611bcf565b610e79565b6005546102c5906001600160a01b031681565b61043e610f0f565b610449600382610f69565b604051806040016040528060018152602001603560f81b8152509061048a5760405162461bcd60e51b81526004016104819190611d9b565b60405180910390fd5b506040516001600160a01b038216907f37803e2125c48ee96c38ddf04e826daf335b0e1603579040fd275aba6d06b6fc90600090a250565b6104ca610f85565b6104d2610fdc565b6104dd600382611036565b604051806040016040528060018152602001603560f81b815250906105155760405162461bcd60e51b81526004016104819190611d9b565b506001600160a01b038116600090815260086020908152604080832033845290915290206002810154600182015481158015906105525750600081115b60405180604001604052806002815260200161189960f11b8152509061058b5760405162461bcd60e51b81526004016104819190611d9b565b50825460408051808201909152600281527f31330000000000000000000000000000000000000000000000000000000000006020820152904210156105e35760405162461bcd60e51b81526004016104819190611d9b565b506040517f42966c68000000000000000000000000000000000000000000000000000000008152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b15801561065f57600080fd5b505af1158015610673573d6000803e3d6000fd5b5050600080865560018601819055600286015550506005546106a19085906001600160a01b03163384611058565b6040518181526001600160a01b0385169033907f70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd9870689060200160405180910390a35050506106ee6001600255565b50565b6106f9610f85565b610701610fdc565b61070c600383611036565b604051806040016040528060018152602001603360f81b815250906107445760405162461bcd60e51b81526004016104819190611d9b565b506040805180820190915260028152610c4d60f21b6020820152670de0b6b3a76400008210156107875760405162461bcd60e51b81526004016104819190611d9b565b5060075481111560405180604001604052806002815260200161313160f01b815250906107c75760405162461bcd60e51b81526004016104819190611d9b565b506107d2828261109c565b6107dc6001600255565b5050565b6107e8610f0f565b6107f06112b5565b565b6107fa610f0f565b604080518082019091526002815261189960f11b6020820152816108315760405162461bcd60e51b81526004016104819190611d9b565b5060075460408051918252602082018390527f85f74920e1f6204d55f604086d42c74410e5b8f5d3b5c166d2d019dcfa87b8b9910160405180910390a1600755565b606061087f6003611325565b905090565b61088c610f0f565b6107f06000611332565b60015433906001600160a01b031681146109185760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e657200000000000000000000000000000000000000000000006064820152608401610481565b6106ee81611332565b610929610f0f565b60408051808201909152600181527f36000000000000000000000000000000000000000000000000000000000000006020820152620186a082106109805760405162461bcd60e51b81526004016104819190611d9b565b5060065460408051918252602082018390527f8d10d6dd6545b059182e4bf9534308bf75d7de65cdd8a68c12b7b74f139e58ae910160405180910390a1600655565b6109ca610f0f565b6107f0611358565b6109da610f85565b6109e2610fdc565b6109ed600387611036565b604051806040016040528060018152602001603360f81b81525090610a255760405162461bcd60e51b81526004016104819190611d9b565b506040805180820190915260028152610c4d60f21b6020820152670de0b6b3a7640000861015610a685760405162461bcd60e51b81526004016104819190611d9b565b5060075485111560405180604001604052806002815260200161313160f01b81525090610aa85760405162461bcd60e51b81526004016104819190611d9b565b50610ae27f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316333088888888886113b6565b610aec868661109c565b610af66001600255565b505050505050565b6000610b0b600383611036565b92915050565b610b19610f0f565b60408051808201909152600281527f313000000000000000000000000000000000000000000000000000000000000060208201526201518062ffffff83161015610b765760405162461bcd60e51b81526004016104819190611d9b565b506005546040805162ffffff600160a01b9093048316815291831660208301527f6f05c070768300be3a8ec47b18efd326d94912ec5cf3f8bd7488e1c66d61e8bf910160405180910390a16005805462ffffff909216600160a01b027fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff909216919091179055565b610c06610f0f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156040518060400160405280600181526020017f390000000000000000000000000000000000000000000000000000000000000081525090610c905760405162461bcd60e51b81526004016104819190611d9b565b506040805180820190915260018152603160f81b60208201526001600160a01b038316610cd05760405162461bcd60e51b81526004016104819190611d9b565b5060408051808201909152600181527f3700000000000000000000000000000000000000000000000000000000000000602082015281610d235760405162461bcd60e51b81526004016104819190611d9b565b50610d386001600160a01b03841683836115c1565b505050565b610d45610f0f565b6040805180820190915260018152603160f81b60208201526001600160a01b038216610d845760405162461bcd60e51b81526004016104819190611d9b565b50600554604080516001600160a01b03928316815291831660208301527f10fec2a14e14feb1d848cdd80d3c7779dbec9893e995469fd2984323d6d71dc8910160405180910390a16005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610e03610f0f565b600180546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff199091168117909155610e416000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b610e81610f0f565b6001600160a01b03811615801590610e9f5750610e9f60038261166a565b604051806040016040528060018152602001603560f81b81525090610ed75760405162461bcd60e51b81526004016104819190611d9b565b506040516001600160a01b038216907f0e3c58ebfb2e7465fbb1c32e6b4f40c3c4f5ca77e8218a386aff8617831260d790600090a250565b6000546001600160a01b031633146107f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610481565b6000610f7e836001600160a01b03841661167f565b9392505050565b6002805403610fd65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610481565b60028055565b600154600160a01b900460ff16156107f05760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610481565b6001600160a01b03811660009081526001830160205260408120541515610f7e565b306001600160a01b038416036110815761107c6001600160a01b03851683836115c1565b611096565b6110966001600160a01b038516848484611772565b50505050565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111009190611dce565b61110b90600a611ee5565b61111d90670de0b6b3a7640000611ef4565b6111279083611ef4565b9050600080600654111561115457620f4240600654836111479190611f16565b6111519190611ef4565b90505b61115e8183611f2d565b6001600160a01b03851660009081526008602090815260408083203384529091528120600281018054939550909286929061119a908490611f40565b92505081905550828160010160008282546111b59190611f40565b90915550506005546111d390600160a01b900462ffffff1642611f40565b81556001600160a01b038516600090815260096020526040812084916111fc6201518042611ef4565b6112099062015180611f16565b815260200190815260200160002060008282546112269190611f40565b9091555061126190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316333087611772565b604080518481526020810186905280820184905290516001600160a01b0387169133917f215abfcd108b85fbee47f26fda2de66f90f14fa5fcaf0201698ad8ac9323545f9181900360600190a35050505050565b6112bd6117c3565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60606000610f7e8361181c565b6001805473ffffffffffffffffffffffffffffffffffffffff191690556106ee81611878565b611360610fdc565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113083390565b604051623f675f60e91b81526001600160a01b038881166004830152600091908a1690637ecebe0090602401602060405180830381865afa1580156113ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114239190611f53565b6040517fd505accf0000000000000000000000000000000000000000000000000000000081526001600160a01b038a811660048301528981166024830152604482018990526064820188905260ff8716608483015260a4820186905260c48201859052919250908a169063d505accf9060e401600060405180830381600087803b1580156114b057600080fd5b505af11580156114c4573d6000803e3d6000fd5b5050604051623f675f60e91b81526001600160a01b038b81166004830152600093508c169150637ecebe0090602401602060405180830381865afa158015611510573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115349190611f53565b9050611541826001611f40565b81146115b55760405162461bcd60e51b815260206004820152602160248201527f5361666545524332303a207065726d697420646964206e6f742073756363656560448201527f64000000000000000000000000000000000000000000000000000000000000006064820152608401610481565b50505050505050505050565b6040516001600160a01b038316602482015260448101829052610d389084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526118d5565b6000610f7e836001600160a01b0384166119bd565b600081815260018301602052604081205480156117685760006116a3600183611f2d565b85549091506000906116b790600190611f2d565b905081811461171c5760008660000182815481106116d7576116d7611f6c565b90600052602060002001549050808760000184815481106116fa576116fa611f6c565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061172d5761172d611f82565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610b0b565b6000915050610b0b565b6040516001600160a01b03808516602483015283166044820152606481018290526110969085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611606565b600154600160a01b900460ff166107f05760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610481565b60608160000180548060200260200160405190810160405280929190818152602001828054801561186c57602002820191906000526020600020905b815481526020019060010190808311611858575b50505050509050919050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061192a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a0c9092919063ffffffff16565b905080516000148061194b57508080602001905181019061194b9190611f98565b610d385760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610481565b6000818152600183016020526040812054611a0457508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610b0b565b506000610b0b565b6060611a1b8484600085611a23565b949350505050565b606082471015611a9b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610481565b600080866001600160a01b03168587604051611ab79190611fba565b60006040518083038185875af1925050503d8060008114611af4576040519150601f19603f3d011682016040523d82523d6000602084013e611af9565b606091505b5091509150611b0a87838387611b15565b979650505050505050565b60608315611b84578251600003611b7d576001600160a01b0385163b611b7d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610481565b5081611a1b565b611a1b8383815115611b995781518083602001fd5b8060405162461bcd60e51b81526004016104819190611d9b565b80356001600160a01b0381168114611bca57600080fd5b919050565b600060208284031215611be157600080fd5b610f7e82611bb3565b60008060408385031215611bfd57600080fd5b611c0683611bb3565b946020939093013593505050565b600060208284031215611c2657600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015611c6e5783516001600160a01b031683529284019291840191600101611c49565b50909695505050505050565b60ff811681146106ee57600080fd5b60008060008060008060c08789031215611ca257600080fd5b611cab87611bb3565b955060208701359450604087013593506060870135611cc981611c7a565b9598949750929560808101359460a0909101359350915050565b60008060408385031215611cf657600080fd5b611cff83611bb3565b9150611d0d60208401611bb3565b90509250929050565b600060208284031215611d2857600080fd5b813562ffffff81168114610f7e57600080fd5b600080600060608486031215611d5057600080fd5b611d5984611bb3565b9250611d6760208501611bb3565b9150604084013590509250925092565b60005b83811015611d92578181015183820152602001611d7a565b50506000910152565b6020815260008251806020840152611dba816040850160208701611d77565b601f01601f19169190910160400192915050565b600060208284031215611de057600080fd5b8151610f7e81611c7a565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611e3c578160001904821115611e2257611e22611deb565b80851615611e2f57918102915b93841c9390800290611e06565b509250929050565b600082611e5357506001610b0b565b81611e6057506000610b0b565b8160018114611e765760028114611e8057611e9c565b6001915050610b0b565b60ff841115611e9157611e91611deb565b50506001821b610b0b565b5060208310610133831016604e8410600b8410161715611ebf575081810a610b0b565b611ec98383611e01565b8060001904821115611edd57611edd611deb565b029392505050565b6000610f7e60ff841683611e44565b600082611f1157634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610b0b57610b0b611deb565b81810381811115610b0b57610b0b611deb565b80820180821115610b0b57610b0b611deb565b600060208284031215611f6557600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600060208284031215611faa57600080fd5b81518015158114610f7e57600080fd5b60008251611fcc818460208701611d77565b919091019291505056fea264697066735822122055f1082d854034b583c6df88397bc375da261e22a47433f8a6b8fd27332b839264736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101b95760003560e01c80638da5cb5b116100f9578063ce23eb3c11610097578063e7563f3f11610071578063e7563f3f146103ea578063f2fde38b146103fd578063fac09e8714610410578063fbfa77cf1461042357600080fd5b8063ce23eb3c146103b3578063cea9d26f146103c6578063e30c3978146103d957600080fd5b80639be918e6116100d35780639be918e6146102f9578063ad5c40f01461030c578063b714073314610361578063b9a57d021461038c57600080fd5b80638da5cb5b146102b857806393e00c86146102dd578063978bbdb9146102f057600080fd5b80634ba5c66311610166578063715018a611610140578063715018a61461028d57806379ba5097146102955780637b84fda51461029d5780638456cb59146102b057600080fd5b80634ba5c663146102475780635436ae9a1461025a5780635c975abb1461026f57600080fd5b8063352693151161019757806335269315146101f95780633f4ba83a146102285780634682f7131461023057600080fd5b80631c46bc6f146101be5780631e83409a146101d35780631e9a6950146101e6575b600080fd5b6101d16101cc366004611bcf565b610436565b005b6101d16101e1366004611bcf565b6104c2565b6101d16101f4366004611bea565b6106f1565b60055461020f90600160a01b900462ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b6101d16107e0565b61023960075481565b60405190815260200161021f565b6101d1610255366004611c14565b6107f2565b610262610873565b60405161021f9190611c2d565b600154600160a01b900460ff165b604051901515815260200161021f565b6101d1610884565b6101d1610896565b6101d16102ab366004611c14565b610921565b6101d16109c2565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161021f565b6101d16102eb366004611c89565b6109d2565b61023960065481565b61027d610307366004611bcf565b610afe565b61034661031a366004611ce3565b600860209081526000928352604080842090915290825290208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161021f565b61023961036f366004611bea565b600960209081526000928352604080842090915290825290205481565b6102c57f000000000000000000000000000000000000000000000000000000000000000081565b6101d16103c1366004611d16565b610b11565b6101d16103d4366004611d3b565b610bfe565b6001546001600160a01b03166102c5565b6101d16103f8366004611bcf565b610d3d565b6101d161040b366004611bcf565b610dfb565b6101d161041e366004611bcf565b610e79565b6005546102c5906001600160a01b031681565b61043e610f0f565b610449600382610f69565b604051806040016040528060018152602001603560f81b8152509061048a5760405162461bcd60e51b81526004016104819190611d9b565b60405180910390fd5b506040516001600160a01b038216907f37803e2125c48ee96c38ddf04e826daf335b0e1603579040fd275aba6d06b6fc90600090a250565b6104ca610f85565b6104d2610fdc565b6104dd600382611036565b604051806040016040528060018152602001603560f81b815250906105155760405162461bcd60e51b81526004016104819190611d9b565b506001600160a01b038116600090815260086020908152604080832033845290915290206002810154600182015481158015906105525750600081115b60405180604001604052806002815260200161189960f11b8152509061058b5760405162461bcd60e51b81526004016104819190611d9b565b50825460408051808201909152600281527f31330000000000000000000000000000000000000000000000000000000000006020820152904210156105e35760405162461bcd60e51b81526004016104819190611d9b565b506040517f42966c68000000000000000000000000000000000000000000000000000000008152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b15801561065f57600080fd5b505af1158015610673573d6000803e3d6000fd5b5050600080865560018601819055600286015550506005546106a19085906001600160a01b03163384611058565b6040518181526001600160a01b0385169033907f70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd9870689060200160405180910390a35050506106ee6001600255565b50565b6106f9610f85565b610701610fdc565b61070c600383611036565b604051806040016040528060018152602001603360f81b815250906107445760405162461bcd60e51b81526004016104819190611d9b565b506040805180820190915260028152610c4d60f21b6020820152670de0b6b3a76400008210156107875760405162461bcd60e51b81526004016104819190611d9b565b5060075481111560405180604001604052806002815260200161313160f01b815250906107c75760405162461bcd60e51b81526004016104819190611d9b565b506107d2828261109c565b6107dc6001600255565b5050565b6107e8610f0f565b6107f06112b5565b565b6107fa610f0f565b604080518082019091526002815261189960f11b6020820152816108315760405162461bcd60e51b81526004016104819190611d9b565b5060075460408051918252602082018390527f85f74920e1f6204d55f604086d42c74410e5b8f5d3b5c166d2d019dcfa87b8b9910160405180910390a1600755565b606061087f6003611325565b905090565b61088c610f0f565b6107f06000611332565b60015433906001600160a01b031681146109185760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e657200000000000000000000000000000000000000000000006064820152608401610481565b6106ee81611332565b610929610f0f565b60408051808201909152600181527f36000000000000000000000000000000000000000000000000000000000000006020820152620186a082106109805760405162461bcd60e51b81526004016104819190611d9b565b5060065460408051918252602082018390527f8d10d6dd6545b059182e4bf9534308bf75d7de65cdd8a68c12b7b74f139e58ae910160405180910390a1600655565b6109ca610f0f565b6107f0611358565b6109da610f85565b6109e2610fdc565b6109ed600387611036565b604051806040016040528060018152602001603360f81b81525090610a255760405162461bcd60e51b81526004016104819190611d9b565b506040805180820190915260028152610c4d60f21b6020820152670de0b6b3a7640000861015610a685760405162461bcd60e51b81526004016104819190611d9b565b5060075485111560405180604001604052806002815260200161313160f01b81525090610aa85760405162461bcd60e51b81526004016104819190611d9b565b50610ae27f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316333088888888886113b6565b610aec868661109c565b610af66001600255565b505050505050565b6000610b0b600383611036565b92915050565b610b19610f0f565b60408051808201909152600281527f313000000000000000000000000000000000000000000000000000000000000060208201526201518062ffffff83161015610b765760405162461bcd60e51b81526004016104819190611d9b565b506005546040805162ffffff600160a01b9093048316815291831660208301527f6f05c070768300be3a8ec47b18efd326d94912ec5cf3f8bd7488e1c66d61e8bf910160405180910390a16005805462ffffff909216600160a01b027fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff909216919091179055565b610c06610f0f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156040518060400160405280600181526020017f390000000000000000000000000000000000000000000000000000000000000081525090610c905760405162461bcd60e51b81526004016104819190611d9b565b506040805180820190915260018152603160f81b60208201526001600160a01b038316610cd05760405162461bcd60e51b81526004016104819190611d9b565b5060408051808201909152600181527f3700000000000000000000000000000000000000000000000000000000000000602082015281610d235760405162461bcd60e51b81526004016104819190611d9b565b50610d386001600160a01b03841683836115c1565b505050565b610d45610f0f565b6040805180820190915260018152603160f81b60208201526001600160a01b038216610d845760405162461bcd60e51b81526004016104819190611d9b565b50600554604080516001600160a01b03928316815291831660208301527f10fec2a14e14feb1d848cdd80d3c7779dbec9893e995469fd2984323d6d71dc8910160405180910390a16005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610e03610f0f565b600180546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff199091168117909155610e416000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b610e81610f0f565b6001600160a01b03811615801590610e9f5750610e9f60038261166a565b604051806040016040528060018152602001603560f81b81525090610ed75760405162461bcd60e51b81526004016104819190611d9b565b506040516001600160a01b038216907f0e3c58ebfb2e7465fbb1c32e6b4f40c3c4f5ca77e8218a386aff8617831260d790600090a250565b6000546001600160a01b031633146107f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610481565b6000610f7e836001600160a01b03841661167f565b9392505050565b6002805403610fd65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610481565b60028055565b600154600160a01b900460ff16156107f05760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610481565b6001600160a01b03811660009081526001830160205260408120541515610f7e565b306001600160a01b038416036110815761107c6001600160a01b03851683836115c1565b611096565b6110966001600160a01b038516848484611772565b50505050565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111009190611dce565b61110b90600a611ee5565b61111d90670de0b6b3a7640000611ef4565b6111279083611ef4565b9050600080600654111561115457620f4240600654836111479190611f16565b6111519190611ef4565b90505b61115e8183611f2d565b6001600160a01b03851660009081526008602090815260408083203384529091528120600281018054939550909286929061119a908490611f40565b92505081905550828160010160008282546111b59190611f40565b90915550506005546111d390600160a01b900462ffffff1642611f40565b81556001600160a01b038516600090815260096020526040812084916111fc6201518042611ef4565b6112099062015180611f16565b815260200190815260200160002060008282546112269190611f40565b9091555061126190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316333087611772565b604080518481526020810186905280820184905290516001600160a01b0387169133917f215abfcd108b85fbee47f26fda2de66f90f14fa5fcaf0201698ad8ac9323545f9181900360600190a35050505050565b6112bd6117c3565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60606000610f7e8361181c565b6001805473ffffffffffffffffffffffffffffffffffffffff191690556106ee81611878565b611360610fdc565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113083390565b604051623f675f60e91b81526001600160a01b038881166004830152600091908a1690637ecebe0090602401602060405180830381865afa1580156113ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114239190611f53565b6040517fd505accf0000000000000000000000000000000000000000000000000000000081526001600160a01b038a811660048301528981166024830152604482018990526064820188905260ff8716608483015260a4820186905260c48201859052919250908a169063d505accf9060e401600060405180830381600087803b1580156114b057600080fd5b505af11580156114c4573d6000803e3d6000fd5b5050604051623f675f60e91b81526001600160a01b038b81166004830152600093508c169150637ecebe0090602401602060405180830381865afa158015611510573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115349190611f53565b9050611541826001611f40565b81146115b55760405162461bcd60e51b815260206004820152602160248201527f5361666545524332303a207065726d697420646964206e6f742073756363656560448201527f64000000000000000000000000000000000000000000000000000000000000006064820152608401610481565b50505050505050505050565b6040516001600160a01b038316602482015260448101829052610d389084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526118d5565b6000610f7e836001600160a01b0384166119bd565b600081815260018301602052604081205480156117685760006116a3600183611f2d565b85549091506000906116b790600190611f2d565b905081811461171c5760008660000182815481106116d7576116d7611f6c565b90600052602060002001549050808760000184815481106116fa576116fa611f6c565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061172d5761172d611f82565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610b0b565b6000915050610b0b565b6040516001600160a01b03808516602483015283166044820152606481018290526110969085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611606565b600154600160a01b900460ff166107f05760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610481565b60608160000180548060200260200160405190810160405280929190818152602001828054801561186c57602002820191906000526020600020905b815481526020019060010190808311611858575b50505050509050919050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061192a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a0c9092919063ffffffff16565b905080516000148061194b57508080602001905181019061194b9190611f98565b610d385760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610481565b6000818152600183016020526040812054611a0457508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610b0b565b506000610b0b565b6060611a1b8484600085611a23565b949350505050565b606082471015611a9b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610481565b600080866001600160a01b03168587604051611ab79190611fba565b60006040518083038185875af1925050503d8060008114611af4576040519150601f19603f3d011682016040523d82523d6000602084013e611af9565b606091505b5091509150611b0a87838387611b15565b979650505050505050565b60608315611b84578251600003611b7d576001600160a01b0385163b611b7d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610481565b5081611a1b565b611a1b8383815115611b995781518083602001fd5b8060405162461bcd60e51b81526004016104819190611d9b565b80356001600160a01b0381168114611bca57600080fd5b919050565b600060208284031215611be157600080fd5b610f7e82611bb3565b60008060408385031215611bfd57600080fd5b611c0683611bb3565b946020939093013593505050565b600060208284031215611c2657600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015611c6e5783516001600160a01b031683529284019291840191600101611c49565b50909695505050505050565b60ff811681146106ee57600080fd5b60008060008060008060c08789031215611ca257600080fd5b611cab87611bb3565b955060208701359450604087013593506060870135611cc981611c7a565b9598949750929560808101359460a0909101359350915050565b60008060408385031215611cf657600080fd5b611cff83611bb3565b9150611d0d60208401611bb3565b90509250929050565b600060208284031215611d2857600080fd5b813562ffffff81168114610f7e57600080fd5b600080600060608486031215611d5057600080fd5b611d5984611bb3565b9250611d6760208501611bb3565b9150604084013590509250925092565b60005b83811015611d92578181015183820152602001611d7a565b50506000910152565b6020815260008251806020840152611dba816040850160208701611d77565b601f01601f19169190910160400192915050565b600060208284031215611de057600080fd5b8151610f7e81611c7a565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611e3c578160001904821115611e2257611e22611deb565b80851615611e2f57918102915b93841c9390800290611e06565b509250929050565b600082611e5357506001610b0b565b81611e6057506000610b0b565b8160018114611e765760028114611e8057611e9c565b6001915050610b0b565b60ff841115611e9157611e91611deb565b50506001821b610b0b565b5060208310610133831016604e8410600b8410161715611ebf575081810a610b0b565b611ec98383611e01565b8060001904821115611edd57611edd611deb565b029392505050565b6000610f7e60ff841683611e44565b600082611f1157634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610b0b57610b0b611deb565b81810381811115610b0b57610b0b611deb565b80820180821115610b0b57610b0b611deb565b600060208284031215611f6557600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600060208284031215611faa57600080fd5b81518015158114610f7e57600080fd5b60008251611fcc818460208701611d77565b919091019291505056fea264697066735822122055f1082d854034b583c6df88397bc375da261e22a47433f8a6b8fd27332b839264736f6c63430008140033",
  "devdoc": {
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "acceptOwnership()": {
        "details": "The new owner accepts the ownership transfer."
      },
      "addSupportedAsset(address)": {
        "params": {
          "asset": "Support asset"
        }
      },
      "claim(address)": {
        "params": {
          "_assetToken": "Claimable token address"
        }
      },
      "isSupportedAsset(address)": {
        "params": {
          "asset": "Support asset"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Pauses contract functionality."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "pendingOwner()": {
        "details": "Returns the address of the pending owner."
      },
      "redeem(address,uint256)": {
        "params": {
          "_assetToken": "Redeem asset address",
          "_pusdAmount": "PUSD amount"
        }
      },
      "redeemWithPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "params": {
          "_assetToken": "Redeem asset address",
          "_deadline": "Deadline",
          "_permitR": "R",
          "_permitS": "S",
          "_permitV": "V",
          "_pusdAmount": "PUSD amount"
        }
      },
      "removeSupportedAsset(address)": {
        "params": {
          "asset": "Support asset"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setCooldownDuration(uint24)": {
        "params": {
          "duration": "Duration of the cooldown"
        }
      },
      "transferOwnership(address)": {
        "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Unpauses contract functionality."
      },
      "updateFeeRate(uint256)": {
        "details": "Update the redeem fee rate.Only callable by addresses with the owner.",
        "params": {
          "_rate": "The new redeem fee rate."
        }
      },
      "updateMaxPerRedeem(uint256)": {
        "details": "Update the max redeem limit.Only callable by addresses with the owner.",
        "params": {
          "_maxRedeem": "The new max redeem limit."
        }
      },
      "updateVault(address)": {
        "details": "Update the vault address.Only callable by addresses with the owner.",
        "params": {
          "_vault": "The new vault address."
        }
      }
    },
    "title": "PUSD Redeem",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "PUSD()": {
        "notice": "PUSD stablecoin"
      },
      "addSupportedAsset(address)": {
        "notice": "Adds an asset to the supported assets list."
      },
      "claim(address)": {
        "notice": "Cliam token"
      },
      "cooldownDuration()": {
        "notice": "T+2"
      },
      "isSupportedAsset(address)": {
        "notice": "Checks if an asset is supported."
      },
      "pause()": {
        "notice": "Only callable by addresses with the owner."
      },
      "redeem(address,uint256)": {
        "notice": "Redeem supported token"
      },
      "redeemWithPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Redeem supported token"
      },
      "redemptionHistory(address,uint256)": {
        "notice": "assetToken => timestamp(days) => totalRedeem"
      },
      "redemptions(address,address)": {
        "notice": "assetToken => account => Redemption"
      },
      "removeSupportedAsset(address)": {
        "notice": "Removes an asset from the supported assets list"
      },
      "setCooldownDuration(uint24)": {
        "notice": "Set cooldown duration."
      },
      "unpause()": {
        "notice": "Only callable by addresses with the owner."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 396,
        "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 509,
        "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 627,
        "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
        "label": "_paused",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 728,
        "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
        "label": "_status",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 5720,
        "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
        "label": "_supportedAssets",
        "offset": 0,
        "slot": "3",
        "type": "t_struct(AddressSet)4995_storage"
      },
      {
        "astId": 5722,
        "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
        "label": "vault",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 5725,
        "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
        "label": "cooldownDuration",
        "offset": 20,
        "slot": "5",
        "type": "t_uint24"
      },
      {
        "astId": 5727,
        "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
        "label": "feeRate",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 5729,
        "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
        "label": "maxPerRedeem",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 5749,
        "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
        "label": "redemptions",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Redemption)5425_storage))"
      },
      {
        "astId": 5756,
        "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
        "label": "redemptionHistory",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(Redemption)5425_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct IPUSDRedeem.Redemption))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Redemption)5425_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_struct(Redemption)5425_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IPUSDRedeem.Redemption)",
        "numberOfBytes": "32",
        "value": "t_struct(Redemption)5425_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(AddressSet)4995_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "members": [
          {
            "astId": 4994,
            "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)4680_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Redemption)5425_storage": {
        "encoding": "inplace",
        "label": "struct IPUSDRedeem.Redemption",
        "members": [
          {
            "astId": 5420,
            "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
            "label": "cooldownEnd",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5422,
            "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
            "label": "underlingAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 5424,
            "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
            "label": "pusdAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Set)4680_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 4675,
            "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 4679,
            "contract": "contracts/tokens/PUSDRedeem.sol:PUSDRedeem",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint24": {
        "encoding": "inplace",
        "label": "uint24",
        "numberOfBytes": "3"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}